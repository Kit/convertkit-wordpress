name: WordPress Playground PR Testing

# When to run tests.
on:
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  build-and-deploy:
    # Name.
    name: WordPress Playground

    # Virtual Environment to use.
    # @see: https://github.com/actions/virtual-environments
    runs-on: ubuntu-latest

    # Define permissions for this action.
    permissions:
      contents: write
      pull-requests: write

    # Environment Variables.
    # Accessible by using ${{ env.NAME }}
    # Use ${{ secrets.NAME }} to include any GitHub Secrets in ${{ env.NAME }}
    # The base folder will always be /home/runner/work/github-repo-name/github-repo-name
    env:
      PLUGIN_SLUG: "convertkit" # The plugin's slug
      PLAYGROUND_BRANCH_NAME: "pr-playground-${{ github.event.pull_request.number }}" # The branch to create from this PR which will have the built Plugin ZIP and blueprint.json added
 
    # Steps to build and provide the Playground URL
    steps:
      # Checkout (copy) this repository's Plugin to this VM.
      - name: Checkout Plugin
        uses: actions/checkout@v4

      # Installs Kit WordPress Libraries.
      - name: Run Composer
        run: composer install --no-dev

      # Installs required packages that must be included in the Plugin
      # as specified in composer.json's "require" section.
      - name: Create ZIP File and Blueprint JSON
        run: |
          # Create ZIP file
          zip -r ${{ env.PLUGIN_SLUG }}.zip . -x ".git/*" ".github/*" ".scripts/*" ".wordpress-org/*" "log/*" "tests/*" "vendor/*"

          # Create blueprint.json
          cat > blueprint.json << EOF
          {
            "landingPage": "/wp-admin/index.php",
            "login": true,
            "steps": [
              {
                "step": "installPlugin",
                "pluginData": {
                  "resource": "url",
                  "url": "https://raw.githubusercontent.com/${{ github.repository }}/${{ env.PLAYGROUND_BRANCH_NAME }}/${{ env.PLUGIN_SLUG }}.zip"
                }
              }
            ]
          }
          EOF

      # Create Temporary Branch
      - name: Create Temporary Branch for Playground
        run: |
          # Create branch specifically for PR artifacts
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          
          # Create new branch if it doesn't exist, or reset it if it does
          git checkout -B ${{ env.PLAYGROUND_BRANCH_NAME }}

          # Clean the branch to avoid keeping old files
          git rm -rf .

          # Add and commit all files to the branch
          git add ${{ env.PLUGIN_SLUG }}.zip blueprint.json
          git commit -m "Add plugin ZIP and blueprint for PR #${{ github.event.pull_request.number }}"
          git push -f origin ${{ env.PLAYGROUND_BRANCH_NAME }}
      
      - name: Comment on PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## WordPress Playground
              
              :rocket: Your PR has been built and is ready for testing in WordPress Playground!
              
              [Click here to test your changes in WordPress Playground](https://playground.wordpress.net/?blueprint-url=https://raw.githubusercontent.com/${{ github.repository }}/${{ env.PLAYGROUND_BRANCH_NAME }}/blueprint.json)`
            })