name: Run Tests

# When to run tests.
on:
  pull_request:
    types:
      - opened
      - synchronize
  push:
    branches:
      - main

jobs:
  tests:
    # Name.
    name: ${{ matrix.test-groups }} / WordPress ${{ matrix.wp-versions }} / PHP ${{ matrix.php-versions }}

    # Virtual Environment to use.
    # @see: https://github.com/actions/virtual-environments
    runs-on: ubuntu-22.04

    # Environment Variables.
    # Accessible by using ${{ env.NAME }}
    # Use ${{ secrets.NAME }} to include any GitHub Secrets in ${{ env.NAME }}
    # The base folder will always be /home/runner/work/github-repo-name/github-repo-name
    env:
      ROOT_DIR: /home/runner/work/convertkit-wordpress/convertkit-wordpress/wordpress
      PLUGIN_DIR: /home/runner/work/convertkit-wordpress/convertkit-wordpress/wordpress/wp-content/plugins/convertkit
      CACHE_DIR: /home/runner/work/convertkit-wordpress/convertkit-wordpress/wordpress/wp-content/plugins/wp-super-cache/
      DB_NAME: test
      DB_USER: root
      DB_PASS: root
      DB_HOST: localhost
      INSTALL_PLUGINS: "admin-menu-editor autoptimize beaver-builder-lite-version block-visibility contact-form-7 classic-editor custom-post-type-ui elementor forminator jetpack-boost woocommerce wordpress-seo wpforms-lite litespeed-cache wp-crontrol wp-super-cache w3-total-cache wp-fastest-cache wp-optimize sg-cachepress" # Don't include this repository's Plugin here.
      INSTALL_PLUGINS_URLS: "https://downloads.wordpress.org/plugin/convertkit-for-woocommerce.1.6.4.zip http://cktestplugins.wpengine.com/wp-content/uploads/2024/01/convertkit-action-filter-tests.zip http://cktestplugins.wpengine.com/wp-content/uploads/2024/11/disable-doing-it-wrong-notices.zip" # URLs to specific third party Plugins
      CONVERTKIT_API_KEY: ${{ secrets.CONVERTKIT_API_KEY }} # ConvertKit API Key, stored in the repository's Settings > Secrets
      CONVERTKIT_API_SECRET: ${{ secrets.CONVERTKIT_API_SECRET }} # ConvertKit API Secret, stored in the repository's Settings > Secrets
      CONVERTKIT_API_KEY_NO_DATA: ${{ secrets.CONVERTKIT_API_KEY_NO_DATA }} # ConvertKit API Key for ConvertKit account with no data, stored in the repository's Settings > Secrets
      CONVERTKIT_API_SECRET_NO_DATA: ${{ secrets.CONVERTKIT_API_SECRET_NO_DATA }} # ConvertKit API Secret for ConvertKit account with no data, stored in the repository's Settings > Secrets
      CONVERTKIT_OAUTH_ACCESS_TOKEN: ${{ secrets.CONVERTKIT_OAUTH_ACCESS_TOKEN }}
      CONVERTKIT_OAUTH_REFRESH_TOKEN: ${{ secrets.CONVERTKIT_OAUTH_REFRESH_TOKEN }}
      CONVERTKIT_OAUTH_ACCESS_TOKEN_NO_DATA: ${{ secrets.CONVERTKIT_OAUTH_ACCESS_TOKEN_NO_DATA }}
      CONVERTKIT_OAUTH_REFRESH_TOKEN_NO_DATA: ${{ secrets.CONVERTKIT_OAUTH_REFRESH_TOKEN_NO_DATA }}
      CONVERTKIT_OAUTH_CLIENT_ID: ${{ secrets.CONVERTKIT_OAUTH_CLIENT_ID }}
      CONVERTKIT_OAUTH_REDIRECT_URI: ${{ secrets.CONVERTKIT_OAUTH_REDIRECT_URI }}
      KIT_OAUTH_REDIRECT_URI: ${{ secrets.KIT_OAUTH_REDIRECT_URI }}
      CONVERTKIT_API_SIGNED_SUBSCRIBER_ID: ${{ secrets.CONVERTKIT_API_SIGNED_SUBSCRIBER_ID }} # ConvertKit API Signed Subscriber ID, stored in the repository's Settings > Secrets
      CONVERTKIT_API_SIGNED_SUBSCRIBER_ID_NO_ACCESS: ${{ secrets.CONVERTKIT_API_SIGNED_SUBSCRIBER_ID_NO_ACCESS }} # ConvertKit API Signed Subscriber ID with no access to Products, stored in the repository's Settings > Secrets
      CONVERTKIT_API_RECAPTCHA_SITE_KEY: ${{ secrets.CONVERTKIT_API_RECAPTCHA_SITE_KEY }} # Google reCAPTCHA v3 Site Key, stored in the repository's Settings > Secrets
      CONVERTKIT_API_RECAPTCHA_SECRET_KEY: ${{ secrets.CONVERTKIT_API_RECAPTCHA_SECRET_KEY }} # Google reCAPTCHA v3 Secret Key, stored in the repository's Settings > Secrets
      
    # Defines the WordPress and PHP Versions matrix to run tests on
    # WooCommerce 5.9.0 requires WordPress 5.6 or greater, so we do not test on earlier versions
    # If testing older WordPress versions, ensure they are e.g. 5.7.4, 5.6.6 that have the X3 SSL fix: https://core.trac.wordpress.org/ticket/54207
    # For PHP, make sure that an nginx configuration file exists for the required PHP version in this repository at tests/nginx/php-x.x.conf
    strategy:
      fail-fast: false
      matrix:
        wp-versions: [ 'latest' ] #[ '6.1.1', 'latest' ]
        php-versions: [ '8.2' ] #[ '7.4', '8.0', '8.1' ]

        # Folder names within the 'tests' folder to run tests in parallel.
        test-groups: [
          'acceptance/broadcasts/blocks-shortcodes',
        ]

    # Steps to install, configure and run tests
    steps:
      - name: Define Test Group Name
        id: test-group
        uses: mad9000/actions-find-and-replace-string@5
        with:
          source: ${{ matrix.test-groups }}
          find: '/'        
          replace: '-'
          replaceAll: true

      # Checkout (copy) this repository's Plugin to this VM.
      - name: Checkout Plugin
        uses: actions/checkout@v4
        with:
          path: ${{ env.PLUGIN_DIR }}

      # We install WP-CLI, as it provides useful commands to setup and install WordPress through the command line.
      - name: Install WP-CLI
        run: |
          curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
          chmod +x wp-cli.phar
          sudo mv wp-cli.phar /usr/local/bin/wp-cli

      # This step is deliberately after WordPress installation and configuration, as enabling PHP 8.x before using WP-CLI results
      # in the workflow failing due to incompatibilities between WP-CLI and PHP 8.x.
      # By installing PHP at this stage, we can still run our tests against e.g. PHP 8.x.
      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          coverage: xdebug

      # Replace the default nginx site configuration
      - name: Configure nginx site
        run: |
          sudo rm -f /etc/nginx/sites-enabled/default
          sudo tee /etc/nginx/sites-available/default > /dev/null << 'EOF'

          server {
            listen 80 default_server;
            listen [::]:80 default_server;

            root /var/www/html;
            index index.php;

            server_name localhost;

            location / {
                try_files $uri $uri/ /index.php?$args;
            }

            location ~ \.php$ {
                include snippets/fastcgi-php.conf;
                fastcgi_pass unix:/run/php/php8.2-fpm.sock;
            }

            location ~ /\.ht {
                deny all;
            }
          }
          EOF

          sudo ln -s /etc/nginx/sites-available/default /etc/nginx/sites-enabled/default || true

      # Create WordPress root directory and add test index.php
      - name: Create test file
        run: |
          sudo mkdir -p ${{ env.ROOT_DIR }}
          sudo tee /var/www/html/index.php > /dev/null << 'EOF'
          <?php
          echo 'hello';
          EOF

      # This ensures that applicable files and folders can be written to by WordPress and cache Plugins.
      - name: Set File and Folder Permissions
        run: |
          sudo chmod -R 767 /var/www/html
          sudo chown -R www-data:www-data /var/www/html

      - name: Test nginx
        run: sudo nginx -t

      - name: Start nginx
        run: sudo systemctl start nginx.service

      - name: Test
        run: |
          curl -v http://127.0.0.1